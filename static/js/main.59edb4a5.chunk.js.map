{"version":3,"sources":["components/Searchbar/Serachbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","services/pixabay-api.js","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","onSubmit","useState","input","setInput","className","event","preventDefault","trim","toast","warn","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","id","url","tags","largeImgUrl","src","alt","data-url","Button","onClick","API","fetchPictures","query","page","fetch","then","res","ok","json","Promise","reject","Error","Modal","onClose","handleKeyDown","e","code","useEffect","window","addEventListener","removeEventListener","target","Status","modalRoot","document","querySelector","ImageGallery","onLoadMore","errorMsg","setErrorMsg","status","setStatus","pictures","setPictures","largeImg","setLargeImg","modal","setModal","isFirstRender","useRef","current","hits","prevPictures","scrollTo","top","documentElement","scrollHeight","behavior","catch","error","toggleModal","color","height","width","style","textAlign","length","imgSrc","dataset","map","picture","webformatURL","largeImageURL","createPortal","App","setQuery","setPage","searchQuery","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.59edb4a5.chunk.js","sourcesContent":["import \"./SearchbarStyles.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setInput(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (input.trim() === \"\") {\r\n      toast.warn(\"You have to type something!\");\r\n      return;\r\n    }\r\n    onSubmit(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={input}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = { onSubmit: PropTypes.func };\r\n","import \"./ImageGalleryItemStyles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ id, url, tags, largeImgUrl }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={id}>\r\n      <img\r\n        src={url}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-url={largeImgUrl}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.string,\r\n  url: PropTypes.string,\r\n  tags: PropTypes.string,\r\n  largeImgUrl: PropTypes.string,\r\n};\r\n","import \"./ButtonStyles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","function fetchPictures(query, page) {\r\n  const BASE_URL = \"https://pixabay.com/api/\";\r\n  const API_KEY = \"19028300-83b376d79bd6a99c9e2183deb\";\r\n  return fetch(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(\"Something is wrong, please try again\"));\r\n  });\r\n}\r\n\r\nconst API = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default API;\r\n","import \"./ModalStyles.css\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Modal({ onClose, src, alt }) {\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n  const hadleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={hadleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n","// Styles\r\nimport \"./ImageGalleryStyles.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { createPortal } from \"react-dom\";\r\n// Utilities components\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Custom Components\r\nimport Loader from \"react-loader-spinner\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Button from \"../Button\";\r\nimport API from \"../../services/pixabay-api\";\r\nimport Modal from \"../Modal\";\r\n\r\nconst Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function ImageGallery({ onLoadMore, query, page }) {\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [pictures, setPictures] = useState([]);\r\n  const [largeImg, setLargeImg] = useState({\r\n    url: \"\",\r\n    alt: \"\",\r\n  });\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    setStatus(Status.PENDING);\r\n    fetchPictures();\r\n    // eslint-disable-next-line\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (page === 1) {\r\n      return;\r\n    }\r\n    fetchPictures();\r\n    // eslint-disable-next-line\r\n  }, [page]);\r\n\r\n  const fetchPictures = () => {\r\n    API.fetchPictures(query, page)\r\n      .then((res) => {\r\n        if (page === 1) {\r\n          setPictures(res.hits);\r\n        } else {\r\n          setPictures((prevPictures) => [...prevPictures, ...res.hits]);\r\n        }\r\n\r\n        setStatus(Status.RESOLVED);\r\n        if (page !== 1) {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setErrorMsg(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  };\r\n\r\n  const handleImageClick = (event) => {\r\n    const imgSrc = event.target.dataset.url;\r\n    const alt = event.target.alt;\r\n    setLargeImg({ url: imgSrc, alt });\r\n    toggleModal();\r\n  };\r\n  const toggleModal = () => {\r\n    setModal((modal) => !modal);\r\n  };\r\n\r\n  if (status === \"idle\") {\r\n    return <div className=\"message\">Let's find some nice pictures!</div>;\r\n  }\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={120}\r\n        width={120}\r\n        style={{ textAlign: \"center\" }}\r\n      />\r\n    );\r\n  }\r\n  if (status === \"rejected\") {\r\n    return toast.error(errorMsg);\r\n  }\r\n\r\n  if (status === \"resolved\") {\r\n    return (\r\n      <>\r\n        {pictures.length > 0 ? (\r\n          <>\r\n            <ul className=\"ImageGallery\" onClick={handleImageClick}>\r\n              {pictures.map((picture) => (\r\n                <ImageGalleryItem\r\n                  id={`${picture.id}`}\r\n                  url={picture.webformatURL}\r\n                  tags={picture.tags}\r\n                  largeImgUrl={picture.largeImageURL}\r\n                />\r\n              ))}\r\n            </ul>\r\n            <Button onClick={onLoadMore} />\r\n          </>\r\n        ) : (\r\n          <div className=\"message\">Nothing has been found</div>\r\n        )}\r\n\r\n        {modal &&\r\n          createPortal(\r\n            <Modal\r\n              src={largeImg.url}\r\n              alt={largeImg.alt}\r\n              onClose={toggleModal}\r\n            />,\r\n            modalRoot\r\n          )}\r\n      </>\r\n    );\r\n  } else {\r\n    return <div className=\"message\">We didn't find such picture...</div>;\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.array,\r\n  status: PropTypes.string,\r\n  error: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  onLoadMore: PropTypes.func,\r\n};\r\n","// Styles\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// Global components\nimport { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\n// Local components\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const handleSearchSubmit = (searchQuery) => {\n    setQuery(searchQuery);\n    setPage(1);\n  };\n\n  const handleLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  return (\n    <div className=\"container\">\n      <Searchbar onSubmit={handleSearchSubmit} />\n      <ImageGallery onLoadMore={handleLoadMore} query={query} page={page} />\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}